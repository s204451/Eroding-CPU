$date
2021-11-01T13:41+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module ControlUnit $end
 $var wire 1 ! io_loadImmediate $end
 $var wire 3 " _GEN_22 $end
 $var wire 3 # _GEN_2 $end
 $var wire 1 $ _GEN_10 $end
 $var wire 1 % _T $end
 $var wire 1 & _GEN_31 $end
 $var wire 3 ' io_aluOp $end
 $var wire 1 ( _GEN_19 $end
 $var wire 1 ) _GEN_25 $end
 $var wire 3 * _GEN_5 $end
 $var wire 4 + io_opcode $end
 $var wire 1 , _GEN_13 $end
 $var wire 1 - io_jumpConditional $end
 $var wire 1 . _GEN_8 $end
 $var wire 1 / io_jump $end
 $var wire 1 0 _GEN_24 $end
 $var wire 1 1 _GEN_30 $end
 $var wire 1 2 _GEN_27 $end
 $var wire 1 3 _GEN_33 $end
 $var wire 1 4 _GEN_12 $end
 $var wire 1 5 _GEN_15 $end
 $var wire 1 6 _GEN_21 $end
 $var wire 1 7 _GEN_18 $end
 $var wire 1 8 io_loadMemory $end
 $var wire 1 9 _GEN_35 $end
 $var wire 1 : clock $end
 $var wire 1 ; io_writeEnable $end
 $var wire 1 < _GEN_17 $end
 $var wire 1 = _GEN_26 $end
 $var wire 1 > _GEN_32 $end
 $var wire 3 ? _GEN_20 $end
 $var wire 1 @ io_memWrite $end
 $var wire 3 A _GEN_29 $end
 $var wire 1 B _GEN_6 $end
 $var wire 3 C _GEN_14 $end
 $var wire 3 D _GEN_0 $end
 $var wire 3 E _GEN_9 $end
 $var wire 1 F reset $end
 $var wire 1 G _GEN_3 $end
 $var wire 1 H _GEN_34 $end
 $var wire 1 I _GEN_28 $end
$upscope $end
$enddefinitions $end
$dumpvars
0%
0;
0&
0<
b000 *
0=
0>
06
0!
07
b000 C
08
b000 D
b000 '
09
b000 E
0:
02
03
b000 ?
0I
04
b000 "
05
b000 #
b000 A
0-
0.
0/
00
0(
0F
01
0)
0G
b0000 +
0H
0@
0,
0$
0B
$end
#0
1F
#1
1:
#6
0:
#11
1:
#16
0:
#21
1:
#26
0:
#31
1:
#36
0:
#41
1:
#46
1%
0F
b001 '
b0001 +
0:
1;
#51
1:
#56
0%
11
b010 '
b0010 +
0:
b010 A
#61
1:
#66
0:
#71
1:
#76
0:
